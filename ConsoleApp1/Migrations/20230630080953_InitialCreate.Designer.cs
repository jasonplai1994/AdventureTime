// <auto-generated />
using System;
using ConsoleApp1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleApp1.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20230630080953_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ConsoleApp1.Models.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Stat")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Abilities");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsConsumable")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEquipped")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LegendarySkill")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("EquipmentInventory");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Equipments.Amulet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aspects")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DamageReduction")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsEquipped")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LevelRequirement")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<int>("Stats")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Amulets");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Equipments.Armor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aspects")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DamageReduction")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsEquipped")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LevelRequirement")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<int>("Stats")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Armors");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Equipments.Ring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aspects")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DamageReduction")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsEquipped")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LevelRequirement")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<int>("Stats")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Rings");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Equipments.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aspects")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DamageReduction")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsEquipped")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LevelRequirement")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<int>("Stats")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CurrentDayNumber")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.Property<int>("TurnNumber")
                        .HasColumnType("int");

                    b.Property<string>("Weather")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("ConsoleApp1.Models.NPC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AC")
                        .HasColumnType("int");

                    b.Property<int>("AttackValue")
                        .HasColumnType("int");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("NPCs");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AC")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("XP")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Quest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("RewardXP")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerQuests");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Ability", b =>
                {
                    b.HasOne("ConsoleApp1.Models.Player", null)
                        .WithMany("ListOfAbilities")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Equipment", b =>
                {
                    b.HasOne("ConsoleApp1.Models.Player", null)
                        .WithMany("Inventory")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Equipments.Amulet", b =>
                {
                    b.HasOne("ConsoleApp1.Models.Player", null)
                        .WithMany("Amulets")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Equipments.Armor", b =>
                {
                    b.HasOne("ConsoleApp1.Models.Player", null)
                        .WithMany("Armors")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Equipments.Ring", b =>
                {
                    b.HasOne("ConsoleApp1.Models.Player", null)
                        .WithMany("Rings")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Equipments.Weapon", b =>
                {
                    b.HasOne("ConsoleApp1.Models.Player", null)
                        .WithMany("Weapons")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Game", b =>
                {
                    b.HasOne("ConsoleApp1.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("ConsoleApp1.Models.NPC", b =>
                {
                    b.HasOne("ConsoleApp1.Models.Game", null)
                        .WithMany("NPCs")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Quest", b =>
                {
                    b.HasOne("ConsoleApp1.Models.Player", null)
                        .WithMany("PlayerQuests")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Game", b =>
                {
                    b.Navigation("NPCs");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Player", b =>
                {
                    b.Navigation("Amulets");

                    b.Navigation("Armors");

                    b.Navigation("Inventory");

                    b.Navigation("ListOfAbilities");

                    b.Navigation("PlayerQuests");

                    b.Navigation("Rings");

                    b.Navigation("Weapons");
                });
#pragma warning restore 612, 618
        }
    }
}
